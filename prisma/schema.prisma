// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  email     String   @unique
  fullName  String
  avatarUrl String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart[]

  @@map("users")
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  images      String[]
  category    Category
  size        String?
  stock       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  CartItem    CartItem[]

  @@map("products")
}

model Cart {
  id     String     @id @default(auto()) @map("_id") @db.ObjectId
  userId String     @db.ObjectId
  items  CartItem[]
  user   User       @relation(fields: [userId], references: [id])

  @@map("carts")
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String  @db.ObjectId
  productId String  @db.ObjectId
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  cart      Cart    @relation(fields: [cartId], references: [id])

  @@map("cartItems")
}

enum Category {
  CLOTHING
  ACCESSORIES
}
